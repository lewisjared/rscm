name: Bump version

on:
  workflow_dispatch:
    inputs:
      bump_rule:
        type: choice
        description: How to bump the project's version
        options:
          - patch
          - minor
          - major
          - prerelease
        required: true

jobs:
  bump_version:
    name: "Bump version and create changelog"
    if: "!startsWith(github.event.head_commit.message, 'bump:')"
    runs-on: ubuntu-latest
    env:
      CI_COMMIT_EMAIL: "ci-runner@rscm.invalid"
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.PAT }}

      # towncrier imports the package as part of building so we have to
      # install the package (to keep things slim, we only install the main
      # dependencies, which also means that we get a test that we can import
      # the package with only the compulsory dependencies installed for free)
      - name: Set up python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          allow-prereleases: true
      - name: Set up uv
        # Install latest uv version using the installer
        run: curl -LsSf https://astral.sh/uv/install.sh | sh
      - name: Install the project
        run: |
          uv sync --no-dev

      - name: Install towncrier
        run: |
          uv run pip install towncrier

      - name: Create bump and changelog

        run: |
          git config --global user.name "$GITHUB_ACTOR"
          git config --global user.email "$CI_COMMIT_EMAIL"

          # Bump
          uv run bump-my-version bump ${{ github.event.inputs.bump_rule }} -vv --tag --commit

          # Bump to alpha (so that future commits do not have the same
          # version as the tagged commit)
#          BASE_VERSION=`poetry version -s`
#          NEW_VERSION=`poetry version -s prerelease`
#          echo "Bumping version $BASE_VERSION > $NEW_VERSION"
#          git commit -a -m "bump(pre-release): version $BASE_VERSION > $NEW_VERSION"
#          git push && git push --tags
